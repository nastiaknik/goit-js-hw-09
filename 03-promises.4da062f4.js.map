{"mappings":"iiBAcA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAO,GACTC,EAAW,EAyCf,SAASC,EAAaC,EAAUC,IAbhC,SAAuBC,EAAUD,GAC/B,OAAO,IAAIE,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAASC,KAAKD,SAAW,GAC/BE,YAAW,WACLF,EACFF,EAAQ,CAAEK,SAAAP,EAAUD,UAEpBI,EAAO,CAAEI,SAAAP,EAAUD,S,GAEpBA,E,KAKLS,CAAcV,EAAUC,GACrBU,MAAK,SAAAC,G,IAAGC,EAAQD,EAARH,SAAUK,EAAKF,EAALX,MACjBc,EAAAvB,GAASwB,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,IAEvEK,OAAM,SAAAP,G,IAAGC,EAAQD,EAARH,SAAUK,EAAKF,EAALX,MAClBc,EAAAvB,GAASwB,OAAOI,QAAQ,sBAAqCF,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,IA9CzEpB,EAAO2B,iBAAiB,UAExB,SAA2BC,GACzBA,EAAMC,iBAKR,SAA2BD,GACV,IAAIE,SAASF,EAAMG,QACzBC,SAAQ,SAACC,EAAOC,GACvB/B,EAAK+B,GAAQC,OAAOF,E,IAPtBG,CAAkBR,GAYpB,SAAiBV,G,IAAEX,EAAFW,EAAEX,MAAO8B,EAATnB,EAASmB,KAAMC,EAAfpB,EAAeoB,OAE9B,IADAlC,GAAY,IACIkC,EACd,OAEF,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChClC,EAAakC,EAAGhC,GAChBA,GAAS8B,C,CAlBXG,CAAQrC,E","sources":["src/js/03-promises.js"],"sourcesContent":["// генератор промісів\n// в поля форми користувач буде вводити 1у затримку в мс, крок збільшення затримки для\n// кожного промісу після 1ого і к-сть промісів, яку необхідно ств\n\n// 1. на момент сабміту форми викл ф-ю createPromise(position, delay) стільки разів,\n// скільки ввели в поле amount. Під час кожного виклику передай їй номер промісу(position),\n// що ств, і затримку, враховуючи першу затримку(delay), введену користувачем, і крок(step)\n\n// 2. ф-я createPromise повертає 1 проміс, який викон/відхиляється через delay.\n// Знач промісу повинен бути об'єкт, в якому будуть властивості position і delay зі знач\n// однойменних параметрів. Викор поч код ф-ї для вибору того, що потрібно зробити\n// з промісом - виконати або відхилити.\n// Для відображення повідомлень викор бібліотеку notiflix.\n\nimport Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst data = {};\nlet position = 0;\nformEl.addEventListener('submit', onPromiseBtnClick);\n\nfunction onPromiseBtnClick(event) {\n  event.preventDefault();\n  collectedFormData(event);\n  onStart(data);\n}\n\nfunction collectedFormData(event) {\n  let formData = new FormData(event.target);\n  formData.forEach((value, name) => {\n    data[name] = Number(value);\n  });\n  return data;\n}\n\nfunction onStart({ delay, step, amount }) {\n  position += 1;\n  if (position >= amount) {\n    return;\n  }\n  for (let i = 1; i <= amount; i += 1) {\n    makePromises(i, delay);\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const random = Math.random() > 0.3;\n    setTimeout(() => {\n      if (random) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction makePromises(position, delay) {\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$data","$ce04d3a99e08e73b$var$position","$ce04d3a99e08e73b$var$makePromises","position2","delay","position1","Promise","resolve","reject","random","Math","setTimeout","position","$ce04d3a99e08e73b$var$createPromise","then","param","_$position","_$delay","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","event","preventDefault","FormData","target","forEach","value","name","Number","$ce04d3a99e08e73b$var$collectedFormData","step","amount","i","$ce04d3a99e08e73b$var$onStart"],"version":3,"file":"03-promises.4da062f4.js.map"}